name: Build Next Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: build-next-images
  cancel-in-progress: true

jobs:
  build-next:
    runs-on: release-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: manager
            dockerfile: docker/Dockerfile-static
            image-name: arcane
            build-args: ""
          - name: agent
            dockerfile: docker/Dockerfile-agent-static
            image-name: arcane-headless
            build-args: --agent
    name: Build Next Image (${{ matrix.image.name }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 #v5.0.0
        with:
          node-version: 24

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "backend/go.mod"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set DOCKER_IMAGE_NAME
        run: |
          REPO_OWNER=${{ github.repository_owner }}
          DOCKER_IMAGE_NAME="ghcr.io/${REPO_OWNER,,}/${{ matrix.image.image-name }}"
          echo "DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME}" >>${GITHUB_ENV}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install frontend dependencies
        if: matrix.image.name == 'manager'
        run: pnpm --filter arcane-frontend install --frozen-lockfile

      - name: Build frontend
        if: matrix.image.name == 'manager'
        run: pnpm --filter arcane-frontend build

      - name: Build binaries
        run: bash scripts/github/build-binaries.sh --docker ${{ matrix.image.build-args }}

      - name: Build and push container image
        id: build-push-image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:next
          file: ${{ matrix.image.dockerfile }}

      - name: Container image attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: "${{ env.DOCKER_IMAGE_NAME }}"
          subject-digest: ${{ steps.build-push-image.outputs.digest }}
          push-to-registry: true
